자바 컬렉션 설명:
https://tenlie10.tistory.com/10
https://hoon26.tistory.com/25
https://gangnam-americano.tistory.com/41

스프링 설명 괜찮아보이는 사이트:
https://wonit.tistory.com/129

인프런 김영한 유튜브 자바 스프링 핵심편:
https://www.youtube.com/watch?v=lsPN-N2ze40&list=PLumVmq_uRGHjgPo42iIiDz2EfIur1oyKX&index=1

인프런 김영한 유튜브 자바 스프링 입문 유튜브 버전:
https://www.youtube.com/watch?v=kuMmzVOFyBs&list=PLumVmq_uRGHgBrimIp2-7MCnoPUskVMnd&index=17

---------------------------------------------

제네릭:
https://gangnam-americano.tistory.com/47
아마 객체 반환형일때 특정한 이유목적이 있을때 <>로 제네릭 자료형 사용하는듯?

List<Integer> list = new ArrayList<Integer>(컬렉션명);
// 저장용량을 매개변수에 넣어줌.
// 하지만 매개변수에 숫자를 넣으면 초기용량 지정이지만, 이번 경우처럼 컬렉션명 같은걸 넣으면 그대로 복사해서 넣어주는듯 하다.

iterator 선언할때:
Iterator<데이터타입> iterator명 = 컬렉션.iterator(); 인데,
HashMap에서 사용할때는,
Iterator<데이터타입> iterator명 = map.entrySet().iterator();
Iterator<데이터타입> iterator명 = map.keySet().iterator();
이런식으로 컬렉션 자리에 저런게 들어갈수 있다.

Entry:
entrySet()은 키값이 모두 필요할때, keySet()은 키만 필요할때 사용하는데,
그렇기때문에 키값모두필요한 HashMap자료형은 Entry<Integer,String> 이런식이고,
키만필요한 HashMap자료형은 Integer 이런식이다.

iterator를 HashMap에 적용시킬때, Map.Entry로 쓰거나 그냥 바로 Entry로 쓰는 경우가 있는데,
Map<String, String> map = new HashMap<String, String>();
이경우에 Map.Entry 를 쓰는거고
HashMap<String, String> map = new HashMap<String, String>();
이경우에 Map없이 Entry로 바로쓰는듯 하다.

.stream()은 데이터 가공시에 filter이런거 앞에 미리 붙여주는 용도로 사용하는듯 하다. 모든 데이터를 반복문처럼 돌려보면서 확인해보는데에 의의가 있는듯하다.

Lambda람다식과 stream스트림의 예시로는 밑의 예시가 있다.
    public Optional<Member> findByName(String name) {
        return store.values().stream()  // 아마도 데이터가공시에 사용되는것이 stream인듯 하다. -> 인 화살표로 람다 작성.
                .filter(member -> member.getName().equals(name))  // member.getName()이 findByName(String name)의 매개변수로 넘어온 name과 같은지 확인하는 것이다. 같은경우에만 필터링이 실행된다.
                // (member -> member.getName().equals(name))에서, 첫 member은 데이터들을 모두 돌려보는 어떠한 메소드의 매개변수값이고,
                // 그 메소드의 return 반환결과값이 member.getName().equals(name) 인 것이다.
                // 즉, 하나하나 전부 member 데이터를 매개변수로 넣어 돌려 찾아가면서 findByName(String name)의 매개변수로 넘어온 name과 같은지 확인하는 것이다.
                .findAny();  // 필터링된 그중에서 가장 먼저 탐색된 요소를 반환함.
    }

---------------------------------------------

<중간 공부 순서>

자바 컬렉션 이해하기 / 완료 O
https://gangnam-americano.tistory.com/41
https://hoon26.tistory.com/25

->

리스트 / 완료 O
https://mainia.tistory.com/2323

Iterator 관련 / 완료 O
https://wakestand.tistory.com/247

향상된 for문 관련 / 완료 O
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=kiho0530&logNo=150142348128
https://jamesdreaming.tistory.com/105

->

해쉬맵 / 완료 O
https://coding-factory.tistory.com/556

HashMap의 capacity와 load factor 관련 / 완료 O
https://wjdtn7823.tistory.com/75

entrySet, keySet, Iterator 관련 / 완료 O
https://tychejin.tistory.com/31

->

해쉬셋 / 완료 O
https://crazykim2.tistory.com/474

->

문제풀기 / 완료 O
https://edu-coding.tistory.com/119

->

람다,스트림 공부
https://bombichun.tistory.com/entry/JAVA%EB%9E%8C%EB%8B%A4%EC%99%80-%EC%8A%A4%ED%8A%B8%EB%A6%BCLambda-Stream
https://tychejin.tistory.com/31

->

다형성 공부

---------------------------------------------

